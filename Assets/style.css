/*Homework */
/* Universal Selector */
* {
  margin:0;
  padding:0;  
}

:root {
  --dark-blue: darkblue;
  --light-blue: lightblue;
  --light-sky-blue: lightskyblue;
  --alternative-text: teal;
}
/*The funny part about this is it
actually takes longer to type
out the var variables lol */

::selection {
  background-color: var(--light-sky-blue);
  color: var(--dark-blue);

}

.c:active {
  user-select: all;
}



/* Element Selectors */
body {
  position: relative;
  font-family: "Goudy Bookletter 1911", sans-serif;
  font-size: 20px;
  background-color:var(--light-sky-blue);
  color: var(--dark-blue);
}

h1,
h2 {
  margin: 20px;
}

.my-picture {
  display: flex;
  position: center;
}
main {
  display: block;
  padding: 60px 0;
}
/*don't delete 60px 0, it just makes the button look weird*/

li {
  display: inline;
  padding: 0px 20px;
  text-decoration: none;
}

a {
  text-decoration: none;
  color: var(--light-blue);
}

header,
footer {
  height: 60px;
  width: 100%;
  line-height: 60px;
  background-color: var(--light-sky-blue);
}
/*I kept the position fixed because
I liked the way it look having the heading
move */
header {
  position: fixed;
  border-bottom: 10px solid var(--dark-blue);
}
/*I kind of want to add a dark top border */
footer {
  position: absolute;
  margin-top: 0;
  bottom: 0;
  border-bottom: 10px lightskyblue;
  color: darkblue;    
}

.background {
  margin: auto;
  width: 80%;
  display: flex;
  align-items: center;
  /*aligns flex items along the cross-axis
  of the current line of the flex container
  (which was probably left -> right */
  padding: 20px;
  margin: 20px;
}
/*lines 69 and 170 helped me to get them all to behave
like inline elements probably because they are flex
which means they have some properties of inline and
block elements. The align-items helped me specify
how the elements should be aligned. I 
just needed* (edit 1 week later) to figure out how 
to move pigeons */

.image {
  display: flex; 
  position: center;
  /*I finally figured it out. This code
  down here and the align-items:center 
  was a life save; */
  margin-left: 180px;
  margin-right: 200px;
}
/* I do wonder why justify-content: space-around
doesn't work... */

section {
  margin-bottom: 0;
  padding: 20px 10px 40px 10px;
  border-top: 3px var(--dark-blue);
  background-color:  var(--light-sky-blue);
}

form {
  /* Center the form on the page */
  margin: 0 auto;
  width: 500px;
  padding: 10px;
  border: 5px var(--dark-blue);
  border-radius: 20px;
}


label {
  display: inline-block;
  width: 100px;
}
  
input, 
textarea {
  box-sizing: border-box;
  width: 300px;
  border: 1px solid var(--dark-blue);
}

textarea {
  vertical-align: top;
  height: 60px;
}
  
button {
  height: 40px;
  width: 120px;
  background-color: var(--dark-blue);
  color: var(--light-sky-blue);
}
 
/* Class Selectors */
.text-center {
  text-align: center;
}

.text-right {
  display: inline;
  text-align: right;
}

.right-gif {
  display:inline;
}
.left-gif {
  display:inline;
}

/* ID Selectors */
/*describes behavior of input blocks */
#name { 
  display:flex;
  height: 20px;
}

#email {
  display:flex;
  height: 100px;
}
/*flex will give it inline features with a 
few block capabilities */

#form {
  display:inline;
}

